{% block registration %}
  <form id="registration-form" action="/registration" method="get" class="my-5">
    <div class="mb-3">
      <label for="inputName" class="form-label">Your name</label>
      <span id="mistake-name" class="mistake"></span>
      <input name="name" type="test" class="form-control" id="inputName"
             aria-describedby="nameHelp" maxlength="50">
      <div id="nameHelp" class="form-text">We will never share your information
        with anyone else.
      </div>
    </div>
    <div class="mb-3">
      <label for="inputLogin" class="form-label">Login</label>
      <span id="mistake-login" class="mistake"></span>
      <input name="login" type="text" class="form-control" id="inputLogin"
             aria-describedby="loginHelp" maxlength="50">
      <div id="loginHelp" class="form-text">Login must be one word and contain
        only letters and/or numbers
      </div>
    </div>
    <div class="mb-3">
      <label for="inputPassword" class="form-label">Password</label>
      <span id="mistake-pass" class="mistake"></span>
      <input type="password" id="inputPassword" class="form-control"
             aria-describedby="passwordHelpBlock" maxlength="20">
      <div id="passwordHelpBlock" class="form-text">
        Your password must be 8-20 characters long, contain letters and numbers,
        and must not contain spaces, special characters, or emoji.
      </div>
    </div>
    <div class="mb-3 form-check">
      <input type="checkbox" class="form-check-input" id="check1">
      <label class="form-check-label" for="check1">Remember me</label>
    </div>
    <button id="submit" type="submit" class="btn btn-primary">Submit</button>
  </form>
  <form id="accept-invitation" action="/registration" method="get" class="mb-5">
    <div class="mb-3">
      <label for="inputName" class="form-label">You are invited to the Super Chat.
        <br>It will automatically be added to your chat.
        <br>Do you accept the offer?</label>
    </div>
    <button id="submit" type="submit" class="btn btn-primary">I accept</button>
  </form>

  {# Temporary js #}
  <script type="text/javascript">
    let userRefInfo = {};
    var user = $.cookie('user');
    let refUser = window.location.search.replace('?', '').split('&').reduce(function (p, e) {
        var a = e.split('=');
        p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);
        return p;
      }, {}
    ).reflink;
    let isMyFriend = false;

    $(window).on('load', function () {
      $('#registration-form').hide();
      $('#accept-invitation').hide();
      if(refUser && user) {
        $('#accept-invitation').fadeIn(800);
      } else {
        $('#registration-form').fadeIn(800);
      }

      let mistake = 'This field cannot be empty';
      getInfoRefUser();

      $('#registration #submit').on('click', function (e) {
        e.preventDefault();

        let name = $('#inputName').val();
        if (!name) {
          mistakeAction('inputName', 'mistake-name', mistake);
          return false;
        }

        let login = $('#inputLogin').val();
        if (!login) {
          mistakeAction('inputLogin', 'mistake-login', mistake);
          return false;
        }

        let loginTestA = /[^a-zA-Z0-9]/g.test(login);
        if (loginTestA) {
          mistake = 'Illegal characters';
          mistakeAction('inputLogin', 'mistake-login', mistake);
          return false;
        }

        let pass = $('#inputPassword').val();
        if (!pass) {
          mistakeAction('inputPassword', 'mistake-pass', mistake);
          return false;
        }

        let passTestA = /[^a-zA-Z0-9]/g.test(pass);
        if (passTestA) {
          mistake = 'Illegal characters';
          mistakeAction('inputPassword', 'mistake-pass', mistake);
          return false;
        }

        let check = $('#check1').prop('checked');

        action = 'registration';
        let data = {
          'name': name,
          'login': login,
          'pass': pass,
          'ref-user': refUser,
          'action': action
        }

        $.ajax({
          url: '/api/',
          method: 'post',
          dataType: 'json',
          data: data,
          success: function (data) {
            if (data.data.user == 'login') {
              mistake = 'Sorry, this login is busy.';
              mistakeAction('inputLogin', 'mistake-login', mistake);
              return false;
            } else if (data.data.user > '0') {
              clearForm();
              let userinfo = data.data.userinfo;
              $('#user-info').text(userinfo.name);
              $('#login-mess').html("Hello " + userinfo.name + "!").addClass('show success-text');
              user = userinfo.id;
              $.cookie('user', user, {path: '/', expires: 7});
              addRefUserToMyFriend();
              $('#nav-login').hide();
              $('#nav-logout').show();
              $('#nav-registration').hide();
              setTimeout(function () {
                window.location.href = '/chat';
              }, 4000);
            } else {

            }
          }
        });
      });

      $('#accept-invitation #submit').on('click', function (e) {
        e.preventDefault();

        addRefUserToMyFriend();

        setTimeout(function () {
          $.cookie('friend', refUser, {path: '/', expires: 7});
          window.location.href = '/chat';
        }, 4000);
      });
      function clearForm() {
        $('#inputName, #inputLogin, #inputPassword').val('');
        $('#mistake-name, #mistake-login, #inputPassword').html('').removeClass('show');
        $('#check1').prop('checked', false);
      }

      function mistakeAction(toFocus, toMistake, mistake) {
        $('#' + toFocus).focus();
        $('#' + toMistake).text(mistake).addClass('show');
        setTimeout(function () {
          $('#' + toMistake).removeClass('show');
        }, 3000);
      }

      function getInfoRefUser() {
        $('.ref-user-info-body').html('').hide();
        if (refUser) {
          $.ajax({
            url: '/api/',
            method: 'post',
            dataType: 'json',
            data: {'user': refUser, 'action': 'userinfo'},
            success: function (data) {
              if (data.data.userinfo.login) {
                userRefInfo = data.data.userinfo;
                isMyFriend = checkFriend();
                setTimeout(function () {
                  let html = '';
                  if (isMyFriend) {
                    html += '<div class="ref-user-info-box mistake-text">';
                    html += 'The inviter is already your friend';
                    userRefInfo = {};
                    refUser = undefined;
                    setTimeout(function () {
                      window.location.href = '/registration';
                    }, 3500);
                  } else {
                    if (userRefInfo.id == user) {
                      html += '<div class="ref-user-info-box mistake-text">';
                      html += 'You can not invite yourself';
                      userRefInfo = {};
                      refUser = undefined;
                    } else {
                      html = '<div class="ref-user-info-box">';
                      //html += '<span>' + userRefInfo.name + '</span> invited you to Super Chat';
                      html += 'Inviter Verified';
                    }
                  }
                  html += '</div>';
                  $('.ref-user-info-body').html(html).fadeIn(800);
                }, 3500);
              } else {
                let html = '';
                html = '<div class="ref-user-info-box mistake-text">';
                html += 'There is no inviter';
                html += '</div>';
                userRefInfo = {};
                refUser = undefined;
                $('.ref-user-info-body').html(html).fadeIn(800).delay(3000).fadeOut(800);
                setTimeout(function () {
                  window.location.href = '/registration';
                }, 3000);
              }
            }
          });
        }
      }

      function checkFriend() {
        if (!user) return isMyFriend = false;
        action = 'friends';
        data = {'user': user, 'action': action}
        $.ajax({
          url: '/api/',
          method: 'post',
          dataType: 'json',
          data: data,
          success: function (data) {
            if (data.data.friends.length > 0) {
              $.each(data.data.friends, function (index, value) {
                if(value.id == refUser) {
                  isMyFriend = true;
                }
              });
            }
          }
        });
      }

      function addRefUserToMyFriend() {
        action = 'add-friend';
        $.ajax({
          url: '/api/',
          method: 'post',
          dataType: 'json',
          data: {
            'user': user,
            'friend': refUser,
            'action': action
          },
          success: function (data) {
            if(data.data.friend == 'isfried') {

            } else if(data.data.friend) {
              sendMessageFriend();
            } else {

            }
          }
        });
      }

      function sendMessageFriend() {
        action = 'add-message';
        //let newMessage = userinfo.name + ' accepted your invitation';
        let newMessage = 'I accepted your invitation';
        $.ajax({
          url: '/api/',
          method: 'post',
          dataType: 'json',
          data: {
            'user': user,
            'friend': refUser,
            'message': newMessage,
            'action': action
          },
          success: function (data) {

          }
        });

      }

    });
  </script>
{% endblock %}
